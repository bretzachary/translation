ï »¿Algunas personas preguntaron sobre los aspectos técnicos del gran éxodo de Delicious en 2010, y finalmente tuve algo de tiempo para escribirlo. Tenga en cuenta que los tiempos en todos los gráficos son UTC.
El 16 de diciembre, Yahoo celebró una reunión de todas las manos para reunir a las tropas después de una gran ronda de despidos. Alrededor de las 11 am, alguien en esta reunión mostró una diapositiva con un par de propiedades de Yahoo agrupadas en tres categorías, una de las cuales se llamó siniestramente &quot;puesta de sol&quot;. El logotipo más destacado del grupo perteneció a Delicious, nuestro principal competidor. Milisegundos más tarde, la diapositiva estaba en la web, y hubo un sonido atronador siniestro cuando todos los usuarios de Delicious en América del Norte corrieron hacia la salida. [*]
Recibí el mensaje justo cuando estaba empezando a trabajar para el día. Mi cliente de Twitter, normalmente un lugar donde podría ver diez o veinte menciones diarias de Pinboard, se había convertido en un borrón sin parar de actualizaciones. Mi bandeja de entrada estaba haciendo un tipo de sonido sostenido que nunca antes había escuchado. Iba a ser una tarde interesante.
Antes de este momento, nuestra relación con Delicious era la de una garrapata para un elefante. Éramos un sitio de nicho y en el transcurso de dieciocho meses se habían extraído a unos seis mil usuarios de nuestro competidor masivo, un ritmo con el que me sentí muy feliz y que esperaba mantener hasta 2011. Pero ahora el Vicepresidente Senior para Malas Decisiones en Yahoo Había decidido ayudarnos un poco.
Anteriormente publiqué este gráfico del tráfico web de Pinboard en los días inmediatamente antes y después del anuncio de Delicious. Esa pequeña barra azul en la parte inferior muestra niveles normales de tráfico de la semana anterior. Los dos picos de las montañas verde azulado corresponden al tráfico del mediodía del 16 al 17 de diciembre.
Mi respuesta inmediata fue intentar iniciar sesión en el servidor y ver si había algo que pudiera hacer para evitar que se cayera. La primera ley de negocios de Internet de CegÅ‚owski enseña: &quot;Nunca estorbes a las personas que intentan darte dinero&quot;, y la forma más rápida de violarla fue estrellarte en este momento clave. Para mi alivio, el servidor todavía era accesible y receptivo. Una mirada a apachetop mostró que el tráfico web se aproximaba a 50 aciertos / segundo, o aproximadamente veinte veces el nivel habitual.
Esto no es mucho tráfico en términos absolutos, pero es más de lo que un sitio web típico puede manejar sin previo aviso. Los sitios como Daring Fireball o Slashdot que son conocidos por estrellar los objetos de su atención, normalmente solo conducen la mitad de este nivel de tráfico. Esperaba tener que matar el servidor web, crear una página de inicio estática e intentar volver a facilitar el sitio en línea. Pero en cambio me beneficié de una gran suerte.
Pinboard comparte un servidor web con el Bedbug Registry, una especie de foro público para personas que luchan contra las plagas. Comencé el registro en 2006 (una historia completamente diferente) y existió en la oscuridad hasta el verano de 2010, cuando las chinches infestaron algunas tiendas minoristas de alto perfil en la ciudad de Nueva York y todos los medios de comunicación del país decidieron publicar una historia de chinches. al mismo tiempo.
El Summer of Bug culminó en un enlace de septiembre desde la página de inicio de CNN que impulsó un volumen de tráfico comparable (aproximadamente 45 hits / segundo) y rápidamente convirtió el servidor en melaza. En ese momento, Peter pasó una hora frenética reconfigurando Apache e instalando libra para poder absorber la atención de manera segura. Ninguno de los dos nos dimos cuenta de que acabábamos de probar Pinboard para el estrés de la desaparición de Delicious tres meses después. [**]
Gracias a esto, el servidor web Pinboard funcionó como un campeón durante todo el éxodo de Delicious, incluso cuando otras partes del servicio se vieron sometidas a una fuerte presión. Pudimos mantener los tiempos de visualización de nuestra página mediana por debajo de un tercio de segundo a través de lo peor del tráfico de Yahoo, mientras que otros sitios (¡e incluso el blog de Delicious!) Se redujeron. Esto nos dio un excelente boca a boca más tarde.
Por supuesto, si se hubieran encontrado chinches en las oficinas de Delicious, nuestro servidor habría estado condenado.
Otra buena suerte fue que había provisto de Pinboard demasiado con hardware, básicamente debido a mi gran pereza. Aquí es cómo se veía nuestra configuración de red en ese fatídico día:
Como puede ver, teníamos un gran servidor web conectado a un servidor de bases de datos aún más grande, con una tercera máquina más modesta a cargo de las tareas en segundo plano.
Se ha convertido en una práctica aceptada en el desarrollo de aplicaciones web para diseñar en capas de caché de aplicaciones desde el principio. Esto es especialmente cierto en el mundo de Rails y otros frameworks, donde hay una tendencia a tratar la aplicación como un personaje de alto nivel en un juego de rol, dotándolo de gemas épicas, sinatras, capistranos y otras armaduras de mithril en una poderosa &quot;pila de aplicaciones&quot;.
Acababa de salir de la consultoría de Rails cuando empecé a Pinboard y realmente quería evitar este tipo de ingeniería excesiva, aprovechando el hecho de que era 2010 y que un sitio web lo suficientemente simple podría funcionar de forma ridículamente rápida sin almacenamiento en caché si solo le tiraba el hardware. . Después de probar varios proveedores de alojamiento, encontré a Digital One, una pequeña empresa suiza que alquiló servidores blade HP con cantidades prodigiosas (al menos según los estándares de alojamiento web) de RAM. Esto significó que nuestros dos mil usuarios activos fueron absorbidos por completo dentro de un vasto servidor de bases de datos tipo catedral.
Si le ofrece a MySQL este tipo de habitación, sus datos simplemente subirán allí y se reirán de usted sin importar qué tipo de tráfico reciba. Dado que Pinboard no es mucho más que una envoltura delgada en torno a algunas consultas de base de datos cuidadosamente ajustadas, los usuarios y visitantes pueden buscar en los marcadores el contenido de sus corazones sin que el servidor se dé cuenta de que estaban allí. Esas fueron las buenas noticias.
La mala noticia es que nunca se me había ocurrido probar la base de datos con carga de escritura.
Ahora, puedo ver los beardos por ahí sacudiendo sus cabezas. Pero en mi defensa, las cargas pesadas de escritura parecían ser lo último que Pinboard enfrentaría. Según mi experiencia, las personas se acercaron a una compra en línea de seis dólares con la misma deliberación y consideración que podrían aportar al comprar un auto nuevo. Los posibles usuarios se retarían durante semanas en Twitter y nos envían listas de preguntas escritas y puntuales antes de crear una cuenta.
La idea de que algún día tendríamos que preocuparnos por el rendimiento de la escritura nunca se me ocurrió. Si lo hubiera hecho, lo habría pensado como un síntoma de megalomanía naciente. Pero ahora estábamos viendo esto:
Había miles de nuevos usuarios, y cada uno llegó con un archivo de exportación repleto de preciosos marcadores. A media hora de la embestida, vi que las importaciones se estaban haciendo mal, la base de datos estaba usando todas las entradas y salidas disponibles para escrituras, y los dos esclavos de MySQL se estaban quedando atrás. Por más que lo intenté, no pude conseguir que las importaciones pasaran más rápido. Según los estándares de la base de datos relacional, 80 escrituras de marcadores por segundo deberían haber sido un paseo tranquilo por un prado fragante, pero algo estaba claramente roto.
Para ganar un poco de tiempo, desactivé todos los servicios no esenciales que escribieron algo en la base de datos. Eso significaba que no había más nubes de etiquetas, ni recuentos de marcadores, ni marcadores de arrastre de Instapaper o Twitter, ni una página popular. También significó deshabilitar el indexador de búsqueda, que compartía el mismo disco físico.
Mucho más tarde sabríamos que el problema estaba en la tabla de etiquetas. En los primeros días de Pinboard, lo había configurado así:
crear etiquetas de tabla
día char (255),
bookmark_id int,
....
índice único (tag, bookmark_id)
conjunto de caracteres = utf8
Observe el carácter de longitud fija en lugar de la varchar de longitud variable. Esto significaba que MySQL tenía que usar 765 bytes por etiqueta solo para ese campo, sin importar qué tan corta fuera la etiqueta real [***]. Estoy seguro de que lo que estaba pasando por mi cabeza era algo así como que &#39;las filas de ancho fijo harán que sea más rápido consultar esta tabla. Ahora, ¿qué hay de otra cerveza! &#39;.
Habiendo tomado esta brillante decisión de diseño, me olvidé de ella tan a fondo que en días posteriores nunca pude averiguar por qué nuestra tabla de etiquetas tardó en cargarse desde una copia de seguridad. Todos los índices parecían sensatos y, sin embargo, tardaron años en volver a generar la tabla. Pero, por supuesto, lo que sucedió fue que la mesa se había hinchado hasta llegar a tener un tamaño monstruoso, extendiéndose a más de 80 GB de espacio en disco. Agregar a esta tabla y actualizar su índice hinchado consumió tres cuartos del tiempo de escritura para cada marcador.
Si me hubiera dado cuenta esta fatídica tarde, podría haber intentado hacer algunos cambios más radicales mientras mi mente aún estaba fresca. Pero en ese momento, la magnitud de lo que estábamos tratando no se había aclarado. Habíamos tenido grandes picos de atención antes (¡gracias @gruber y @leolaporte!), Y generalmente desaparecieron rápidamente después de un par de horas. Así que concentré mis esfuerzos en responder a las solicitudes de soporte. Brad DeLong, el gran blogger de economía, tuvo la amabilidad de recopilar y publicar nuestro flujo de tweets desde ese día para la posteridad.
Siempre nos hemos enorgullecido de ser un sitio web minimalista. Pero la experiencia para los nuevos usuarios ahora es casi igual a la de Zen. Después de pagar la tarifa de registro, un nuevo usuario cargaría sus deliciosos marcadores, vería un mensaje que indicaba que la carga estaba pendiente y ... eso era todo. Era posible agregar marcadores a mano, pero no había ninguna nube de etiquetas, no se completaban automáticamente las etiquetas, no se sugerían etiquetas para las URL, los recuentos agregados de marcadores en la página del perfil eran todos incorrectos, y no había manera de buscar marcadores menos que un día de edad. Esto era mucho pedir a las personas que ya estaban asustadas sobre los marcadores en línea. Pasé gran parte de mi tiempo asegurando a los nuevos usuarios que sus datos estaban seguros y que su dinero no estaba llegando a las Islas Caimán.
A las siete de la tarde, Diane salió corriendo a por una botella de champaña y nos dimos diez minutos para celebrar. Aquí estoy viendo trescientos nuevos correos electrónicos que llegan a mi buzón.
Para agregarle sabor a la noche, nuestro servidor de correo saliente comenzó a fallar. Cada bloqueo requería abrir un ticket de soporte y esperar a que alguien en el centro de datos reinicie la máquina. Cada vez que ocurría esto, los correos electrónicos de activación hacían cola y los nuevos usuarios no podían iniciar sesión hasta que la máquina volviera a estar en línea. Esta tarea de desvío me ocupó hasta la medianoche, momento en el que había estado escribiendo casi sin parar durante once horas seguidas y había perdido unos cincuenta puntos de CI. Y las importaciones seguían tardando más y más tiempo; En este punto más de seis horas.
Pinboard tiene un período de prueba de tres días, y ahora tenía visiones de pesadilla de pasar los próximos diez días sentado frente al sitio de PayPal abismalmente lento, haciendo clic en el botón &quot;reembolsar&quot; y olfateando en un pañuelo.
Mi esperanza había sido que pudiéramos ponernos al día después de la medianoche de California, cuando el tráfico web por lo general se reduce a un goteo. Pero, por supuesto, ahora Europa estaba despertando a las noticias de Yahoo y entrando en pánico a su vez. No hubo un cambio real, solo el ruido constante de los nuevos archivos de importación. En el peor de los casos, nos atrasamos unas diez horas con las importaciones, y mis muñecas se quemaron al escribir correos electrónicos tranquilizadores a nuevos clientes nerviosos que explicaban que sus marcadores, en la plenitud de tiempo, realmente aparecerían en el gran espacio en blanco que era su página de inicio. Agregamos algo así como seis millones de marcadores en las primeras 24 horas (duplicando lo que habíamos recolectado en el primer año y medio de funcionamiento del sitio), otros 2.5 millones al día siguiente y diez millones de nuevos marcadores acumulados en esa primera semana.
Este gráfico muestra el tiempo promedio esperado en minutos que los usuarios tuvieron que esperar después de cargar sus cosas:
No fue hasta el amanecer que el retraso en la importación comenzó a disminuir. Ahora era viernes, justo antes de la semana de Navidad, y sentí que si podíamos dirigir el sitio de manera segura durante el fin de semana, tendríamos un poco de espacio para respirar. El sábado por la noche sería el momento perfecto para ejecutar la costosa instrucción ALTER TABLE que solucionaría el problema de las etiquetas. Conforme a este pensamiento, salí a correr (porque ¿por qué no?), Y luego me metí en la cama con instrucciones de hierro para que me despertaran noventa minutos después, sin importar cuánto llorara.
Completamente renovado, pude centrar mi atención en el siguiente par de crisis: etiquetar nubes y archivar.
Las nubes de etiquetas en Pinboard son un elemento simple de la interfaz de usuario que muestra las más o menos 200 etiquetas que has usado en el lado derecho de tu página de inicio. Desde que había desactivado el script que hacía las nubes, los nuevos usuarios temían que sus etiquetas no se hubieran importado correctamente.
Hasta este punto, había generado nubes de etiquetas al ejecutar una consulta SQL que agrupaba todas las etiquetas de un usuario y almacenaba los conteos en una tabla de resumen. Cada vez que un usuario agregaba o editaba un marcador que se lanzaba en una cola, y un guión que acechaba en el fondo regeneraba sus conteos de etiquetas desde cero. Esta consulta era bastante costosa, pero con una carga mínima no importaba.
Por supuesto, ya no estábamos bajo carga mínima. La solución obvia era calcular las etiquetas principales en el código y solo actualizar los pocos recuentos que habían cambiado. Pero codificar esto correctamente fue sorprendentemente difícil. La experiencia de programar en tan poco sueño fue como tratar de cocinar un soufflé dictando instrucciones por teléfono a alguien que nunca antes había estado en la cocina. Se necesitaron varias rondas de reescrituras para hacer que el guión simple de la nube de etiquetas fuera el correcto, y esto me hizo sentir muy nervioso al tocar cualquier otra parte del código en los próximos días, incluso cuando las correcciones eran fáciles y obvias. La parte de mi cerebro que sabía qué hacer ya no parecía estar conectada directamente a mis manos.
La segunda crisis fue más grave. Por una tarifa adicional, Pinboard ofrece cuentas de archivo, donde el sitio rastrea y guarda una copia de cada marcador en su cuenta. Los nuevos usuarios tienen la opción de registrarse para archivar desde el principio o actualizarlo más adelante. Un gran número de recién llegados había elegido la primera opción, lo que significaba que teníamos una acumulación de aproximadamente dos millones de marcadores para rastrear e indexar para la búsqueda de texto completo. También significaba que teníamos un grupo significativo de usuarios nuevos que habían pagado extra por una función que no podían evaluar. [****]
Al igual que muchas otras partes del servicio, el rastreador se configuró para ejecutarse en un proceso por servidor. Era imperativo volver a escribir la secuencia de comandos del rastreador para que varias instancias pudieran ejecutarse en paralelo en cada máquina, y luego configurar una imagen EC2 para que revisemos el registro aún más rápido. La factura de EC2 de diciembre llegó a más de $ 600, pero todos los marcadores fueron rastreados hasta el martes, y mi pesadilla de solicitudes de reembolso sin fin no se materializó.
El lunes, nuestro servidor recién aprovisionado entró en línea. Suponiendo que el exceso me había servido bien hasta ahora, este tenía 64 GB de memoria y acres de espacio en disco. El martes por la mañana me invitaron a aparecer en net @ night con Leo Laporte y Amber MacArthur, quienes fueron tremendamente alentadores. En este punto apenas podía recordar mi propio nombre. Y luego, afortunadamente, era Navidad, y todos se desconectaron por un tiempo.
En estos escritos es tradicional hablar de LECCIONES APRENDIDAS, que es algo de lo que me siento equívoco. Hay muchas cosas que habría hecho diferente sabiendo lo que se avecinaba, pero todo lo relacionado con los eventos inesperados es que no los espera. La mayoría de las decisiones que me causaron dolor (como nunca tomarme el tiempo para paralelizar tareas de fondo) fueron compensaciones sensatas en el momento en que las tomé, ya que me permitieron dedicar tiempo a otra cosa. Así que aquí me centraré en las cosas que estaban inequívocamente equivocadas:
Demasiadas tareas requerían escribir en una base de datos en vivo
Es aterrador y estás muy cansado. Al principio, Peter y yo tuvimos que hacer consultas de SQL en vivo para encontrar cuentas de usuarios, corregir nombres, correos electrónicos e inicios de sesión, y realizar otras tareas de mantenimiento. Viví con el miedo constante de olvidar una cláusula WHERE.
No teníamos página de estado público
Podría haber evitado un gran volumen de correspondencia por correo electrónico al tener una página de estado que señale a la gente qué servicios se estaban ejecutando y cuáles se deshabilitaron temporalmente.
Asumí que los esclavos estarían a pocos minutos del maestro.
Había varios lugares en mi código donde consulté a un esclavo y actualicé el maestro. Esto solo funciona si no te importa estar desactualizado por muchas horas. Por ejemplo, hubiera estado bien para la página popular, pero no fue aceptable para los recuentos de marcadores.
También hubo algunas cosas que salieron bien:
Utilizamos hardware dedicado
Para citar a un famoso hombre de negocios: &quot;Cuesta dinero. Cuesta dinero porque ahorra dinero&quot;.
Cobramos dinero por un bien o servicio.
Sé que esto es controvertido, pero hay enormes beneficios y puedes reinvertir de inmediato un montón de ellos en tu proyecto * sips daiquiri *. Sus clientes apreciarán que tenga un plan a largo plazo que no implique volver a empaquetarlos como producto.
Si Pinboard no fuera un servicio pagado, no podríamos habernos quedado despiertos el 16 de diciembre, y me hubieran visto obligados a buscar fondos externos o cerrar las suscripciones. En cambio, inmediatamente pude contratar contratistas, agregar hardware y depositar dinero en el banco para un mayor desarrollo.
No reclamo que el modelo pagado sea el correcto para todos los proyectos que desean permanecer pequeños e independientes. Pero dado el terrible historial de sitios de marcadores gratuitos en particular, el hecho de que una cuenta de Pinboard cuesta dinero en realidad aumenta su valor percibido. La gente no quiere que sus marcadores se vayan y odian los servicios de cambio. Un modelo de negocio sostenible y creíble es una característica importante.
Así que esa es la historia de nuestra gran aventura de Yahoo: diez millones de marcadores, once mil nuevos usuarios, cuarenta y tantos reembolsos y aproximadamente un terabyte de datos recién rastreados. A todos los que se registraron en el meollo de las cosas, gracias por su excelente paciencia y por ser tan comprensivos mientras trabajamos para que el sitio vuelva a estar en pie.
Y un último grito especial para mi empresa favorita en el mundo, Yahoo. ¡No puedo esperar a ver qué piensan de ustedes después!
* La lista también incluye los misteriosos marcadores de Yahoo, aunque eso no parece afectar a nadie. Cómo Yahoo Bookmarks ha persistido en 2011 sigue siendo uno de los grandes misterios sin resolver de la informática.
** Debo señalar que Yahoo afirma que Delicious está vivo y bien, y que se recuperará mejor que nunca tan pronto como puedan encontrar a alguien, cualquiera, para comprarlo. Dado que todo el personal ha sido despedido y el proyecto es un barco fantasma, voy a seguir con la &quot;desaparición&quot;.
*** Esto se debe a que las cadenas utf8 en MySQL pueden tener hasta tres bytes por carácter, y MySQL debe asumir lo peor en el tamaño de la fila.
**** Terminé extendiendo la ventana de reembolso por siete días y dando a todos una semana extra de archivo gratis.
